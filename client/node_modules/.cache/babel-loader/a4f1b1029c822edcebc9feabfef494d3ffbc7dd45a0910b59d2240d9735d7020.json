{"ast":null,"code":"var _jsxFileName = \"/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { bestPractices } from '../data/bestPractices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BestPracticeList() {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState(() => {\n    const saved = sessionStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const [openIdx, setOpenIdx] = useState(null);\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n  const filteredPractices = filter ? bestPractices.filter(p => p.type === filter) : bestPractices;\n  const displayPractices = showOnlyFavorites ? filteredPractices.filter((_, idx) => favorites.includes(idx)) : filteredPractices;\n  useEffect(() => {\n    sessionStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const handleToggleFavorite = idx => {\n    setFavorites(favs => favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]);\n  };\n  const handleAccordion = idx => {\n    setOpenIdx(openIdx === idx ? null : idx);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '16px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type-filter\",\n          children: \"Filtrer par type : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"type-filter\",\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Tous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOnlyFavorites(fav => !fav),\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          border: '1px solid #ccc',\n          background: showOnlyFavorites ? '#ffe066' : '#f9f9f9',\n          cursor: 'pointer'\n        },\n        children: showOnlyFavorites ? 'Afficher tout' : 'Afficher les favoris'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto'\n      },\n      children: displayPractices.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontStyle: 'italic'\n        },\n        children: \"Aucune carte \\xE0 afficher.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : displayPractices.map((practice, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: '8px',\n          marginBottom: '8px',\n          background: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAccordion(idx),\n          style: {\n            width: '100%',\n            textAlign: 'left',\n            background: 'none',\n            border: 'none',\n            padding: '16px',\n            fontSize: '1.1em',\n            cursor: 'pointer',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          \"aria-expanded\": openIdx === idx,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: practice.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleToggleFavorite(idx);\n              },\n              style: {\n                background: 'none',\n                border: 'none',\n                cursor: 'pointer',\n                fontSize: '1.5em'\n              },\n              \"aria-label\": favorites.includes(idx) ? 'Retirer des favoris' : 'Ajouter aux favoris',\n              children: favorites.includes(idx) ? '★' : '☆'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '8px',\n                fontSize: '0.9em',\n                color: '#555',\n                fontStyle: 'italic'\n              },\n              children: practice.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), openIdx === idx && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0 16px 16px 16px'\n          },\n          children: practice.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '1em'\n            },\n            children: practice.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(BestPracticeList, \"rA1oWe8gWAnN7MQi1+ShPZmbjh8=\");\n_c = BestPracticeList;\nexport default BestPracticeList;\nvar _c;\n$RefreshReg$(_c, \"BestPracticeList\");","map":{"version":3,"names":["React","useState","useEffect","bestPractices","jsxDEV","_jsxDEV","BestPracticeList","_s","filter","setFilter","favorites","setFavorites","saved","sessionStorage","getItem","JSON","parse","showOnlyFavorites","setShowOnlyFavorites","openIdx","setOpenIdx","types","Array","from","Set","map","p","type","filteredPractices","displayPractices","_","idx","includes","setItem","stringify","handleToggleFavorite","favs","i","handleAccordion","children","style","marginBottom","display","alignItems","gap","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","onClick","fav","padding","borderRadius","border","background","cursor","maxWidth","margin","length","color","fontStyle","practice","width","textAlign","fontSize","justifyContent","title","stopPropagation","marginLeft","description","_c","$RefreshReg$"],"sources":["/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx"],"sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\nimport { bestPractices } from '../data/bestPractices';\n\nfunction BestPracticeList() {\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState(() => {\n    const saved = sessionStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const [openIdx, setOpenIdx] = useState(null);\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n\n  const filteredPractices = filter\n    ? bestPractices.filter(p => p.type === filter)\n    : bestPractices;\n\n  const displayPractices = showOnlyFavorites\n    ? filteredPractices.filter((_, idx) => favorites.includes(idx))\n    : filteredPractices;\n\n  useEffect(() => {\n    sessionStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  const handleToggleFavorite = idx => {\n    setFavorites(favs =>\n      favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]\n    );\n  };\n\n  const handleAccordion = idx => {\n    setOpenIdx(openIdx === idx ? null : idx);\n  };\n\n  return (\n    <div>\n      <div style={{marginBottom: '16px', display: 'flex', alignItems: 'center', gap: '16px'}}>\n        <div>\n          <label htmlFor=\"type-filter\">Filtrer par type : </label>\n          <select id=\"type-filter\" value={filter} onChange={e => setFilter(e.target.value)}>\n            <option value=\"\">Tous</option>\n            {types.map(type => (\n              <option key={type} value={type}>{type}</option>\n            ))}\n          </select>\n        </div>\n        <button onClick={() => setShowOnlyFavorites(fav => !fav)} style={{padding: '8px 12px', borderRadius: '6px', border: '1px solid #ccc', background: showOnlyFavorites ? '#ffe066' : '#f9f9f9', cursor: 'pointer'}}>\n          {showOnlyFavorites ? 'Afficher tout' : 'Afficher les favoris'}\n        </button>\n      </div>\n      <div style={{maxWidth: '600px', margin: '0 auto'}}>\n        {displayPractices.length === 0 ? (\n          <div style={{color: '#888', fontStyle: 'italic'}}>Aucune carte à afficher.</div>\n        ) : (\n          displayPractices.map((practice, idx) => (\n            <div key={idx} style={{border: '1px solid #ccc', borderRadius: '8px', marginBottom: '8px', background: '#f9f9f9'}}>\n              <button\n                onClick={() => handleAccordion(idx)}\n                style={{width: '100%', textAlign: 'left', background: 'none', border: 'none', padding: '16px', fontSize: '1.1em', cursor: 'pointer', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}\n                aria-expanded={openIdx === idx}\n              >\n                <span>{practice.title}</span>\n                <span>\n                  <button\n                    onClick={e => {e.stopPropagation(); handleToggleFavorite(idx);}}\n                    style={{background: 'none', border: 'none', cursor: 'pointer', fontSize: '1.5em'}}\n                    aria-label={favorites.includes(idx) ? 'Retirer des favoris' : 'Ajouter aux favoris'}\n                  >\n                    {favorites.includes(idx) ? '★' : '☆'}\n                  </button>\n                  <span style={{marginLeft: '8px', fontSize: '0.9em', color: '#555', fontStyle: 'italic'}}>{practice.type}</span>\n                </span>\n              </button>\n              {openIdx === idx && (\n                <div style={{padding: '0 16px 16px 16px'}}>\n                  {practice.description && <p style={{fontSize: '1em'}}>{practice.description}</p>}\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BestPracticeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}