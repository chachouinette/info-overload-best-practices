{"ast":null,"code":"var _jsxFileName = \"/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { bestPractices } from '../data/bestPractices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BestPracticeList() {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState(() => {\n    const saved = sessionStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const [page, setPage] = useState(1);\n  const pageSize = 9;\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n  const filteredPractices = filter ? bestPractices.filter(p => p.type === filter) : bestPractices;\n  const displayPractices = showOnlyFavorites ? filteredPractices.filter((_, idx) => favorites.includes(idx)) : filteredPractices;\n  useEffect(() => {\n    sessionStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Pagination\n  const totalPages = Math.ceil(displayPractices.length / pageSize);\n  const paginatedPractices = displayPractices.slice((page - 1) * pageSize, page * pageSize);\n  const handleToggleFavorite = idx => {\n    setFavorites(favs => favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]);\n  };\n  const handlePageChange = newPage => {\n    setPage(newPage);\n  };\n  useEffect(() => {\n    setPage(1);\n  }, [filter, showOnlyFavorites]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '16px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type-filter\",\n          children: \"Filtrer par type : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"type-filter\",\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Tous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOnlyFavorites(fav => !fav),\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          border: '1px solid #ccc',\n          background: showOnlyFavorites ? '#ffe066' : '#f9f9f9',\n          cursor: 'pointer'\n        },\n        children: showOnlyFavorites ? 'Afficher tout' : 'Afficher les favoris'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gap: '16px',\n        maxWidth: '900px',\n        margin: '0 auto'\n      },\n      children: paginatedPractices.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontStyle: 'italic',\n          gridColumn: '1 / -1'\n        },\n        children: \"Aucune carte \\xE0 afficher.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : paginatedPractices.map((practice, idx) => {\n        const globalIdx = (page - 1) * pageSize + idx;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: '8px',\n            background: '#f9f9f9',\n            padding: '16px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '1.1em',\n              marginBottom: '8px'\n            },\n            children: practice.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), practice.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '1em'\n            },\n            children: practice.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.9em',\n              color: '#555',\n              fontStyle: 'italic'\n            },\n            children: practice.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleFavorite(globalIdx),\n            style: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '1.5em'\n            },\n            \"aria-label\": favorites.includes(globalIdx) ? 'Retirer des favoris' : 'Ajouter aux favoris',\n            children: favorites.includes(globalIdx) ? '★' : '☆'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, globalIdx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '16px 0',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page - 1),\n        disabled: page === 1,\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          border: '1px solid #ccc',\n          background: '#f9f9f9',\n          cursor: page === 1 ? 'not-allowed' : 'pointer'\n        },\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          alignSelf: 'center'\n        },\n        children: [\"Page \", page, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page + 1),\n        disabled: page === totalPages,\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          border: '1px solid #ccc',\n          background: '#f9f9f9',\n          cursor: page === totalPages ? 'not-allowed' : 'pointer'\n        },\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(BestPracticeList, \"1aPkvlw8fkPEYlqhSGV0V2WMfms=\");\n_c = BestPracticeList;\nexport default BestPracticeList;\nvar _c;\n$RefreshReg$(_c, \"BestPracticeList\");","map":{"version":3,"names":["React","useState","useEffect","bestPractices","jsxDEV","_jsxDEV","BestPracticeList","_s","filter","setFilter","favorites","setFavorites","saved","sessionStorage","getItem","JSON","parse","showOnlyFavorites","setShowOnlyFavorites","page","setPage","pageSize","types","Array","from","Set","map","p","type","filteredPractices","displayPractices","_","idx","includes","setItem","stringify","totalPages","Math","ceil","length","paginatedPractices","slice","handleToggleFavorite","favs","i","handlePageChange","newPage","children","style","marginBottom","display","alignItems","gap","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","onClick","fav","padding","borderRadius","border","background","cursor","gridTemplateColumns","maxWidth","margin","color","fontStyle","gridColumn","practice","globalIdx","position","fontSize","title","description","top","right","justifyContent","disabled","alignSelf","_c","$RefreshReg$"],"sources":["/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx"],"sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\nimport { bestPractices } from '../data/bestPractices';\n\nfunction BestPracticeList() {\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState(() => {\n    const saved = sessionStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const [page, setPage] = useState(1);\n  const pageSize = 9;\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n\n  const filteredPractices = filter\n    ? bestPractices.filter(p => p.type === filter)\n    : bestPractices;\n\n  const displayPractices = showOnlyFavorites\n    ? filteredPractices.filter((_, idx) => favorites.includes(idx))\n    : filteredPractices;\n\n  useEffect(() => {\n    sessionStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Pagination\n  const totalPages = Math.ceil(displayPractices.length / pageSize);\n  const paginatedPractices = displayPractices.slice((page - 1) * pageSize, page * pageSize);\n\n  const handleToggleFavorite = idx => {\n    setFavorites(favs =>\n      favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]\n    );\n  };\n\n  const handlePageChange = newPage => {\n    setPage(newPage);\n  };\n\n  useEffect(() => {\n    setPage(1);\n  }, [filter, showOnlyFavorites]);\n\n  return (\n    <div>\n      <div style={{marginBottom: '16px', display: 'flex', alignItems: 'center', gap: '16px'}}>\n        <div>\n          <label htmlFor=\"type-filter\">Filtrer par type : </label>\n          <select id=\"type-filter\" value={filter} onChange={e => setFilter(e.target.value)}>\n            <option value=\"\">Tous</option>\n            {types.map(type => (\n              <option key={type} value={type}>{type}</option>\n            ))}\n          </select>\n        </div>\n        <button onClick={() => setShowOnlyFavorites(fav => !fav)} style={{padding: '8px 12px', borderRadius: '6px', border: '1px solid #ccc', background: showOnlyFavorites ? '#ffe066' : '#f9f9f9', cursor: 'pointer'}}>\n          {showOnlyFavorites ? 'Afficher tout' : 'Afficher les favoris'}\n        </button>\n      </div>\n      <div style={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '16px', maxWidth: '900px', margin: '0 auto'}}>\n        {paginatedPractices.length === 0 ? (\n          <div style={{color: '#888', fontStyle: 'italic', gridColumn: '1 / -1'}}>Aucune carte à afficher.</div>\n        ) : (\n          paginatedPractices.map((practice, idx) => {\n            const globalIdx = (page - 1) * pageSize + idx;\n            return (\n              <div key={globalIdx} style={{border: '1px solid #ccc', borderRadius: '8px', background: '#f9f9f9', padding: '16px', position: 'relative'}}>\n                <h2 style={{fontSize: '1.1em', marginBottom: '8px'}}>{practice.title}</h2>\n                {practice.description && <p style={{fontSize: '1em'}}>{practice.description}</p>}\n                <span style={{fontSize: '0.9em', color: '#555', fontStyle: 'italic'}}>{practice.type}</span>\n                <button\n                  onClick={() => handleToggleFavorite(globalIdx)}\n                  style={{position: 'absolute', top: 8, right: 8, background: 'none', border: 'none', cursor: 'pointer', fontSize: '1.5em'}}\n                  aria-label={favorites.includes(globalIdx) ? 'Retirer des favoris' : 'Ajouter aux favoris'}\n                >\n                  {favorites.includes(globalIdx) ? '★' : '☆'}\n                </button>\n              </div>\n            );\n          })\n        )}\n      </div>\n      {totalPages > 1 && (\n        <div style={{display: 'flex', justifyContent: 'center', margin: '16px 0', gap: '8px'}}>\n          <button onClick={() => handlePageChange(page - 1)} disabled={page === 1} style={{padding: '8px 12px', borderRadius: '6px', border: '1px solid #ccc', background: '#f9f9f9', cursor: page === 1 ? 'not-allowed' : 'pointer'}}>\n            Précédent\n          </button>\n          <span style={{alignSelf: 'center'}}>Page {page} / {totalPages}</span>\n          <button onClick={() => handlePageChange(page + 1)} disabled={page === totalPages} style={{padding: '8px 12px', borderRadius: '6px', border: '1px solid #ccc', background: '#f9f9f9', cursor: page === totalPages ? 'not-allowed' : 'pointer'}}>\n            Suivant\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BestPracticeList;\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC/C,MAAMW,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IACjD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;EACF,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMoB,QAAQ,GAAG,CAAC;EAClB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACtB,aAAa,CAACuB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAEjE,MAAMC,iBAAiB,GAAGrB,MAAM,GAC5BL,aAAa,CAACK,MAAM,CAACmB,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKpB,MAAM,CAAC,GAC5CL,aAAa;EAEjB,MAAM2B,gBAAgB,GAAGb,iBAAiB,GACtCY,iBAAiB,CAACrB,MAAM,CAAC,CAACuB,CAAC,EAAEC,GAAG,KAAKtB,SAAS,CAACuB,QAAQ,CAACD,GAAG,CAAC,CAAC,GAC7DH,iBAAiB;EAErB3B,SAAS,CAAC,MAAM;IACdW,cAAc,CAACqB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACzB,SAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM0B,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACR,gBAAgB,CAACS,MAAM,GAAGlB,QAAQ,CAAC;EAChE,MAAMmB,kBAAkB,GAAGV,gBAAgB,CAACW,KAAK,CAAC,CAACtB,IAAI,GAAG,CAAC,IAAIE,QAAQ,EAAEF,IAAI,GAAGE,QAAQ,CAAC;EAEzF,MAAMqB,oBAAoB,GAAGV,GAAG,IAAI;IAClCrB,YAAY,CAACgC,IAAI,IACfA,IAAI,CAACV,QAAQ,CAACD,GAAG,CAAC,GAAGW,IAAI,CAACnC,MAAM,CAACoC,CAAC,IAAIA,CAAC,KAAKZ,GAAG,CAAC,GAAG,CAAC,GAAGW,IAAI,EAAEX,GAAG,CAClE,CAAC;EACH,CAAC;EAED,MAAMa,gBAAgB,GAAGC,OAAO,IAAI;IAClC1B,OAAO,CAAC0B,OAAO,CAAC;EAClB,CAAC;EAED5C,SAAS,CAAC,MAAM;IACdkB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,CAACZ,MAAM,EAAES,iBAAiB,CAAC,CAAC;EAE/B,oBACEZ,OAAA;IAAA0C,QAAA,gBACE1C,OAAA;MAAK2C,KAAK,EAAE;QAACC,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAM,CAAE;MAAAL,QAAA,gBACrF1C,OAAA;QAAA0C,QAAA,gBACE1C,OAAA;UAAOgD,OAAO,EAAC,aAAa;UAAAN,QAAA,EAAC;QAAmB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxDpD,OAAA;UAAQqD,EAAE,EAAC,aAAa;UAACC,KAAK,EAAEnD,MAAO;UAACoD,QAAQ,EAAEC,CAAC,IAAIpD,SAAS,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAZ,QAAA,gBAC/E1C,OAAA;YAAQsD,KAAK,EAAC,EAAE;YAAAZ,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC7BnC,KAAK,CAACI,GAAG,CAACE,IAAI,iBACbvB,OAAA;YAAmBsD,KAAK,EAAE/B,IAAK;YAAAmB,QAAA,EAAEnB;UAAI,GAAxBA,IAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNpD,OAAA;QAAQ0D,OAAO,EAAEA,CAAA,KAAM7C,oBAAoB,CAAC8C,GAAG,IAAI,CAACA,GAAG,CAAE;QAAChB,KAAK,EAAE;UAACiB,OAAO,EAAE,UAAU;UAAEC,YAAY,EAAE,KAAK;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,UAAU,EAAEnD,iBAAiB,GAAG,SAAS,GAAG,SAAS;UAAEoD,MAAM,EAAE;QAAS,CAAE;QAAAtB,QAAA,EAC7M9B,iBAAiB,GAAG,eAAe,GAAG;MAAsB;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNpD,OAAA;MAAK2C,KAAK,EAAE;QAACE,OAAO,EAAE,MAAM;QAAEoB,mBAAmB,EAAE,gBAAgB;QAAElB,GAAG,EAAE,MAAM;QAAEmB,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAzB,QAAA,EACpHP,kBAAkB,CAACD,MAAM,KAAK,CAAC,gBAC9BlC,OAAA;QAAK2C,KAAK,EAAE;UAACyB,KAAK,EAAE,MAAM;UAAEC,SAAS,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAQ,CAAE;QAAA5B,QAAA,EAAC;MAAwB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAEtGjB,kBAAkB,CAACd,GAAG,CAAC,CAACkD,QAAQ,EAAE5C,GAAG,KAAK;QACxC,MAAM6C,SAAS,GAAG,CAAC1D,IAAI,GAAG,CAAC,IAAIE,QAAQ,GAAGW,GAAG;QAC7C,oBACE3B,OAAA;UAAqB2C,KAAK,EAAE;YAACmB,MAAM,EAAE,gBAAgB;YAAED,YAAY,EAAE,KAAK;YAAEE,UAAU,EAAE,SAAS;YAAEH,OAAO,EAAE,MAAM;YAAEa,QAAQ,EAAE;UAAU,CAAE;UAAA/B,QAAA,gBACxI1C,OAAA;YAAI2C,KAAK,EAAE;cAAC+B,QAAQ,EAAE,OAAO;cAAE9B,YAAY,EAAE;YAAK,CAAE;YAAAF,QAAA,EAAE6B,QAAQ,CAACI;UAAK;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACzEmB,QAAQ,CAACK,WAAW,iBAAI5E,OAAA;YAAG2C,KAAK,EAAE;cAAC+B,QAAQ,EAAE;YAAK,CAAE;YAAAhC,QAAA,EAAE6B,QAAQ,CAACK;UAAW;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChFpD,OAAA;YAAM2C,KAAK,EAAE;cAAC+B,QAAQ,EAAE,OAAO;cAAEN,KAAK,EAAE,MAAM;cAAEC,SAAS,EAAE;YAAQ,CAAE;YAAA3B,QAAA,EAAE6B,QAAQ,CAAChD;UAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5FpD,OAAA;YACE0D,OAAO,EAAEA,CAAA,KAAMrB,oBAAoB,CAACmC,SAAS,CAAE;YAC/C7B,KAAK,EAAE;cAAC8B,QAAQ,EAAE,UAAU;cAAEI,GAAG,EAAE,CAAC;cAAEC,KAAK,EAAE,CAAC;cAAEf,UAAU,EAAE,MAAM;cAAED,MAAM,EAAE,MAAM;cAAEE,MAAM,EAAE,SAAS;cAAEU,QAAQ,EAAE;YAAO,CAAE;YAC1H,cAAYrE,SAAS,CAACuB,QAAQ,CAAC4C,SAAS,CAAC,GAAG,qBAAqB,GAAG,qBAAsB;YAAA9B,QAAA,EAEzFrC,SAAS,CAACuB,QAAQ,CAAC4C,SAAS,CAAC,GAAG,GAAG,GAAG;UAAG;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA,GAVDoB,SAAS;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWd,CAAC;MAEV,CAAC;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACLrB,UAAU,GAAG,CAAC,iBACb/B,OAAA;MAAK2C,KAAK,EAAE;QAACE,OAAO,EAAE,MAAM;QAAEkC,cAAc,EAAE,QAAQ;QAAEZ,MAAM,EAAE,QAAQ;QAAEpB,GAAG,EAAE;MAAK,CAAE;MAAAL,QAAA,gBACpF1C,OAAA;QAAQ0D,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAAC1B,IAAI,GAAG,CAAC,CAAE;QAACkE,QAAQ,EAAElE,IAAI,KAAK,CAAE;QAAC6B,KAAK,EAAE;UAACiB,OAAO,EAAE,UAAU;UAAEC,YAAY,EAAE,KAAK;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,UAAU,EAAE,SAAS;UAAEC,MAAM,EAAElD,IAAI,KAAK,CAAC,GAAG,aAAa,GAAG;QAAS,CAAE;QAAA4B,QAAA,EAAC;MAE7N;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpD,OAAA;QAAM2C,KAAK,EAAE;UAACsC,SAAS,EAAE;QAAQ,CAAE;QAAAvC,QAAA,GAAC,OAAK,EAAC5B,IAAI,EAAC,KAAG,EAACiB,UAAU;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrEpD,OAAA;QAAQ0D,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAAC1B,IAAI,GAAG,CAAC,CAAE;QAACkE,QAAQ,EAAElE,IAAI,KAAKiB,UAAW;QAACY,KAAK,EAAE;UAACiB,OAAO,EAAE,UAAU;UAAEC,YAAY,EAAE,KAAK;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,UAAU,EAAE,SAAS;UAAEC,MAAM,EAAElD,IAAI,KAAKiB,UAAU,GAAG,aAAa,GAAG;QAAS,CAAE;QAAAW,QAAA,EAAC;MAE/O;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClD,EAAA,CA7FQD,gBAAgB;AAAAiF,EAAA,GAAhBjF,gBAAgB;AA+FzB,eAAeA,gBAAgB;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}