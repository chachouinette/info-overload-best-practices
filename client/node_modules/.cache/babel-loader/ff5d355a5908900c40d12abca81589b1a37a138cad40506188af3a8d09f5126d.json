{"ast":null,"code":"var _jsxFileName = \"/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BestPracticeCard from './BestPracticeCard';\nimport { bestPractices } from '../data/bestPractices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BestPracticeList() {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState(() => {\n    const saved = sessionStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n  const filteredPractices = filter ? bestPractices.filter(p => p.type === filter) : bestPractices;\n  const displayPractices = showOnlyFavorites ? filteredPractices.filter((_, idx) => favorites.includes(idx)) : filteredPractices;\n  useEffect(() => {\n    sessionStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const handleToggleFavorite = idx => {\n    setFavorites(favs => favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '16px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type-filter\",\n          children: \"Filtrer par type : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"type-filter\",\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Tous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOnlyFavorites(fav => !fav),\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          border: '1px solid #ccc',\n          background: showOnlyFavorites ? '#ffe066' : '#f9f9f9',\n          cursor: 'pointer'\n        },\n        children: showOnlyFavorites ? 'Afficher tout' : 'Afficher les favoris'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        overflowX: 'auto',\n        padding: '16px'\n      },\n      children: displayPractices.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontStyle: 'italic'\n        },\n        children: \"Aucune carte \\xE0 afficher.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : displayPractices.map((practice, idx) => /*#__PURE__*/_jsxDEV(BestPracticeCard, {\n        ...practice,\n        isFavorite: favorites.includes(idx),\n        onToggleFavorite: () => handleToggleFavorite(idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(BestPracticeList, \"AgOtUlNcmBxrw5wW9eDqBAj1z+w=\");\n_c = BestPracticeList;\nexport default BestPracticeList;\nvar _c;\n$RefreshReg$(_c, \"BestPracticeList\");","map":{"version":3,"names":["React","useState","useEffect","BestPracticeCard","bestPractices","jsxDEV","_jsxDEV","BestPracticeList","_s","filter","setFilter","favorites","setFavorites","saved","sessionStorage","getItem","JSON","parse","showOnlyFavorites","setShowOnlyFavorites","types","Array","from","Set","map","p","type","filteredPractices","displayPractices","_","idx","includes","setItem","stringify","handleToggleFavorite","favs","i","children","style","marginBottom","display","alignItems","gap","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","onClick","fav","padding","borderRadius","border","background","cursor","overflowX","length","color","fontStyle","practice","isFavorite","onToggleFavorite","_c","$RefreshReg$"],"sources":["/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx"],"sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\nimport BestPracticeCard from './BestPracticeCard';\nimport { bestPractices } from '../data/bestPractices';\n\nfunction BestPracticeList() {\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState(() => {\n    const saved = sessionStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n\n  const filteredPractices = filter\n    ? bestPractices.filter(p => p.type === filter)\n    : bestPractices;\n\n  const displayPractices = showOnlyFavorites\n    ? filteredPractices.filter((_, idx) => favorites.includes(idx))\n    : filteredPractices;\n\n  useEffect(() => {\n    sessionStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  const handleToggleFavorite = idx => {\n    setFavorites(favs =>\n      favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]\n    );\n  };\n\n  return (\n    <div>\n      <div style={{marginBottom: '16px', display: 'flex', alignItems: 'center', gap: '16px'}}>\n        <div>\n          <label htmlFor=\"type-filter\">Filtrer par type : </label>\n          <select id=\"type-filter\" value={filter} onChange={e => setFilter(e.target.value)}>\n            <option value=\"\">Tous</option>\n            {types.map(type => (\n              <option key={type} value={type}>{type}</option>\n            ))}\n          </select>\n        </div>\n        <button onClick={() => setShowOnlyFavorites(fav => !fav)} style={{padding: '8px 12px', borderRadius: '6px', border: '1px solid #ccc', background: showOnlyFavorites ? '#ffe066' : '#f9f9f9', cursor: 'pointer'}}>\n          {showOnlyFavorites ? 'Afficher tout' : 'Afficher les favoris'}\n        </button>\n      </div>\n      <div style={{display: 'flex', overflowX: 'auto', padding: '16px'}}>\n        {displayPractices.length === 0 ? (\n          <div style={{color: '#888', fontStyle: 'italic'}}>Aucune carte Ã  afficher.</div>\n        ) : (\n          displayPractices.map((practice, idx) => (\n            <BestPracticeCard\n              key={idx}\n              {...practice}\n              isFavorite={favorites.includes(idx)}\n              onToggleFavorite={() => handleToggleFavorite(idx)}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BestPracticeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}