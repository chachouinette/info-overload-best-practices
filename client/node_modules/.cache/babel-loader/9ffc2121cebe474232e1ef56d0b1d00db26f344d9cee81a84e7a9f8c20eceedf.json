{"ast":null,"code":"var _jsxFileName = \"/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BestPracticeCard from './BestPracticeCard';\nimport { bestPractices } from '../data/bestPractices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BestPracticeList() {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n  const filteredPractices = filter ? bestPractices.filter(p => p.type === filter) : bestPractices;\n  const handleToggleFavorite = idx => {\n    setFavorites(favs => favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type-filter\",\n        children: \"Filtrer par type : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"type-filter\",\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Tous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        overflowX: 'auto',\n        padding: '16px'\n      },\n      children: filteredPractices.map((practice, idx) => /*#__PURE__*/_jsxDEV(BestPracticeCard, {\n        ...practice,\n        isFavorite: favorites.includes(idx),\n        onToggleFavorite: () => handleToggleFavorite(idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(BestPracticeList, \"X7cgWjOuJBN6yJ8OINw0+yLnMFw=\");\n_c = BestPracticeList;\nexport default BestPracticeList;\nvar _c;\n$RefreshReg$(_c, \"BestPracticeList\");","map":{"version":3,"names":["React","useState","BestPracticeCard","bestPractices","jsxDEV","_jsxDEV","BestPracticeList","_s","filter","setFilter","favorites","setFavorites","types","Array","from","Set","map","p","type","filteredPractices","handleToggleFavorite","idx","favs","includes","i","children","style","marginBottom","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","display","overflowX","padding","practice","isFavorite","onToggleFavorite","_c","$RefreshReg$"],"sources":["/Users/charlottegaia/Infobesite/info-overload-best-practices/client/src/components/BestPracticeList.jsx"],"sourcesContent":["\n\nimport React, { useState } from 'react';\nimport BestPracticeCard from './BestPracticeCard';\nimport { bestPractices } from '../data/bestPractices';\n\nfunction BestPracticeList() {\n  const [filter, setFilter] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const types = Array.from(new Set(bestPractices.map(p => p.type)));\n\n  const filteredPractices = filter\n    ? bestPractices.filter(p => p.type === filter)\n    : bestPractices;\n\n  const handleToggleFavorite = idx => {\n    setFavorites(favs =>\n      favs.includes(idx) ? favs.filter(i => i !== idx) : [...favs, idx]\n    );\n  };\n\n  return (\n    <div>\n      <div style={{marginBottom: '16px'}}>\n        <label htmlFor=\"type-filter\">Filtrer par type : </label>\n        <select id=\"type-filter\" value={filter} onChange={e => setFilter(e.target.value)}>\n          <option value=\"\">Tous</option>\n          {types.map(type => (\n            <option key={type} value={type}>{type}</option>\n          ))}\n        </select>\n      </div>\n      <div style={{display: 'flex', overflowX: 'auto', padding: '16px'}}>\n        {filteredPractices.map((practice, idx) => (\n          <BestPracticeCard\n            key={idx}\n            {...practice}\n            isFavorite={favorites.includes(idx)}\n            onToggleFavorite={() => handleToggleFavorite(idx)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BestPracticeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}